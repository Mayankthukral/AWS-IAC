name: testing Terraform Configuration

# Triggers for the workflow (when to run the workflow)
on:
  push:
    branches:
      - testing  # Run this workflow when code is pushed to the 'testing' branch
  pull_request:
    branches:
      - testing  # Run this workflow when a pull request targets the 'testing' branch

jobs:
  build:
    # Specify the operating system for the job
    runs-on: ubuntu-latest

    # Define environment variables for the job
    env:
      TF_WORKING_DIR: ${{ github.workspace }}/terraform 

    steps:
      # Step to check out the repository's code
      - name: Checkout
        uses: actions/checkout@v3

      # Step to set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with: 
          node-version: '14'

      # Step to set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TFC_TOKEN_ID }}

      # Step to initialize Terraform
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}

      # Step to validate the Terraform configuration
      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ${{ env.TF_WORKING_DIR }}

      # Step to generate a Terraform plan
      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: true
        working-directory: ${{ env.TF_WORKING_DIR }}

      # Step to check the status of the Terraform plan
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
        working-directory: ${{ env.TF_WORKING_DIR }}

      # Step to apply the Terraform configuration
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{ env.TF_WORKING_DIR }}

      # Step to output the results of the Terraform apply
      - name: Terraform Output
        run: terraform output
        working-directory: ${{ env.TF_WORKING_DIR }}
